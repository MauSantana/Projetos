{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno.ricardo.silva\\\\Videos\\\\Mulher Segura\\\\MulherSegura\\\\Site institucional\\\\src\\\\ui\\\\CadastroPsicologo\\\\index.jsx\",\n    _s2 = $RefreshSig$();\n\nimport styles from \"./styles.module.css\";\nimport { Table } from \"react-bootstrap\";\nimport Input from \"../../common/Input\";\nimport { Link } from \"react-router-dom\";\nimport FooterSec from \"../../common/FooterSec\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport api from \"../../api\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CadastroPsicologo() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [nomeDigitado, setNomeDigitado] = useState(\"\");\n  const [cpfDigitado, setCpfDigitado] = useState(\"\");\n  const [rgDigitado, setRgDigitado] = useState(\"\");\n  const [usernameDigitado, setUsernameDigitado] = useState(\"\");\n  const [senhaDigitado, setSenhaDigitado] = useState(\"\");\n  const [datadenascimentoDigitado, setDataDeNascimentoDigitado] = useState(\"\");\n  const [emailDigitado, setEmailDigitado] = useState(\"\");\n  const [celularDigitado, setCelularDigitado] = useState(\"\");\n  const [telefone1Digitado, setTelefone1Digitado] = useState(\"\");\n  const [telefone2Digitado, setTelefone2Digitado] = useState(\"\");\n  const [numeroDoCrpDigitado, setNumeroDoCrpDigitado] = useState(\"\");\n  const history = useHistory();\n\n  function cadastrar(e) {\n    _s();\n\n    const {\n      register,\n      handleSubmit,\n      formState: {\n        errors\n      }\n    } = useForm();\n\n    const onSubmit = data => console.log(data);\n\n    e.preventDefault();\n    api.post(\"/psicologos\", {\n      nome: nomeDigitado,\n      cpf: cpfDigitado,\n      rg: rgDigitado,\n      username: usernameDigitado,\n      senha: senhaDigitado,\n      datadenascimento: datadenascimentoDigitado,\n      email: emailDigitado,\n      celular: celularDigitado,\n      telefone1: telefone1Digitado,\n      telefone2: telefone2Digitado,\n      numeroDoCrp: numeroDoCrpDigitado\n    }).then(resposta => {\n      history.push(\"/Login\");\n    }).catch(erro => {\n      console.log(\"Erro ao cadastrar vitima!\");\n    });\n  }\n\n  _s(cadastrar, \"IPjxuW9u4b3i3sz6iydDOETWQbU=\", false, function () {\n    return [useForm];\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(cadastrar);\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.vetor1,\n      src: \"../img/esquerda.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.vetor2,\n      src: \"../img/direita.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cadastro de psic\\xF3logo!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xC9 atrav\\xE9s do cadastro a seguir que vamos conseguir validar seus dados e cadastra-lo(a) em nosso sistema. Por favor, n\\xE3o deixe de passar nenhum dado, \\xE9 importante para encaminhar pessoas que precisam de ajuda!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.boxForm,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(cadastrar, onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"section1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Dados pessoais:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"form_Psicologo\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: `table-bordered ${styles.tabela}`,\n                  width: \"100%\",\n                  cellpadding: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Nome completo\",\n                          id: \"nomePsi\",\n                          name: \"nomePsi\",\n                          placeholder: \"Jane Doe\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setNomeDigitado(e.target.value),\n                          ref: register(\"nomePsi\", {\n                            required: \"Insira seu nome\",\n                            maxLength: {\n                              value: 5,\n                              message: \"O nome está muito grande\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 92,\n                          columnNumber: 27\n                        }, this), errors.nomePsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.nomePsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 110,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"CPF:\",\n                          id: \"cpfPsi\",\n                          name: \"cpfPsi\",\n                          placeholder: \"___.___.___-__\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCpfDigitado(e.target.value),\n                          ref: register(\"cpfPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a seu CPF!\"\n                            },\n                            maxLength: {\n                              value: 11,\n                              message: \"Informe um CPF válido\"\n                            },\n                            minLength: {\n                              value: 11,\n                              message: \"Informe um CPF válido\"\n                            },\n                            number: {\n                              value: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 27\n                        }, this), errors.cpfPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.cpfPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"RG:\",\n                          id: \"RGPsi\",\n                          name: \"rgPsi\",\n                          placeholder: \"___.___.___-__\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setRgDigitado(e.target.value),\n                          ref: register(\"rgPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu RG!\"\n                            },\n                            maxLength: {\n                              value: 9,\n                              message: \"Informe um RG válido\"\n                            },\n                            minLength: {\n                              value: 9,\n                              message: \"Informe um RG válido\"\n                            },\n                            number: {\n                              value: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 27\n                        }, this), errors.rgPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.rgPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Celular:\",\n                          id: \"celular\",\n                          name: \"celular\",\n                          placeholder: \"(__)_____-____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCelularDigitado(e.target.value),\n                          ref: register(\"celular\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu celular!\"\n                            },\n                            minLength: {\n                              value: 11,\n                              message: \"Insira um celular válido\"\n                            },\n                            maxLength: {\n                              value: 11,\n                              message: \"Insira um celular válido\"\n                            },\n                            number: {\n                              value: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 27\n                        }, this), errors.celular && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.celular.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Data de nascimento:\",\n                          id: \"nascimentoPsi\",\n                          name: \"nascimentoPsi\",\n                          placeholder: \"__/__/____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setDataDeNascimentoDigitado(e.target.value),\n                          ref: register(\"nascimentoPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a sua data de nascimento!\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              message: \"Informe uma data válida ex. 21/03/1994\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 27\n                        }, this), errors.nascimentoPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.nascimentoPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 249,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"CRP:\",\n                          id: \"crp\",\n                          name: \"crp\",\n                          placeholder: \"06/000470-IS\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setNumeroDoCrpDigitado(e.target.value),\n                          ref: register(\"crp\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a seu CRP!\"\n                            },\n                            maxLength: {\n                              value: 11,\n                              message: \"Informe um CRP válido\"\n                            },\n                            minLength: {\n                              value: 11,\n                              message: \"Informe um CRP válido\"\n                            },\n                            number: {\n                              value: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 27\n                        }, this), errors.crp && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.crp.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Telefone 1:\",\n                          id: \"telefone1\",\n                          name: \"telefone1\",\n                          placeholder: \"(__)____-____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setTelefone1Digitado(e.target.value),\n                          ref: register(\"telefone1\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu telefone!\"\n                            },\n                            minLength: {\n                              value: 10,\n                              message: \"Insira um telefone válido!\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              message: \"Insira um telefone válido!\"\n                            },\n                            number: {\n                              value: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 27\n                        }, this), errors.telefone1 && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.telefone1.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Telefone 2:\",\n                          id: \"telefone2\",\n                          name: \"telefone2\",\n                          placeholder: \"(__)____-____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setTelefone2Digitado(e.target.value),\n                          ref: register(\"telefone2\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu telefone!\"\n                            },\n                            minLength: {\n                              value: 10,\n                              message: \"Insira um telefone válido!\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              message: \"Insira um telefone válido!\"\n                            },\n                            number: {\n                              value: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 331,\n                          columnNumber: 27\n                        }, this), errors.telefone2 && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.telefone2.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"section2\",\n              className: \"secao-formulario\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Contato e login:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"form_contato_psicologo\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: `table table-bordered ${styles.tabela}`,\n                  width: \"100%\",\n                  cellpadding: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"E-mail:\",\n                          id: \"emailPsi\",\n                          name: \"emailPsi\",\n                          placeholder: \"email@email.com\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setEmailDigitado(e.target.value),\n                          ref: register(\"emailPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu email!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 27\n                        }, this), errors.emailPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.emailPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 400,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Confirmar e-mail:\",\n                          id: \"confemailPsi\",\n                          placeholder: \"email@email.com\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setEmailDigitado(e.target.value),\n                          ref: register(\"confemailPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Confirme o seu Email!\"\n                            },\n                            equalTo: {\n                              value: \"#email\",\n                              message: \"Os emails devem ser iguais!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 406,\n                          columnNumber: 27\n                        }, this), errors.confemailPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.confemailPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 426,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Username:\",\n                          id: \"usernamePsi\",\n                          name: \"usernamePsi\",\n                          placeholder: \"username\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setUsernameDigitado(e.target.value),\n                          ref: register(\"usernamePsi\", {\n                            required: {\n                              value: true,\n                              message: \"Informe seu username!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 434,\n                          columnNumber: 27\n                        }, this), errors.usernamePsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.usernamePsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 453,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 433,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Confirmar username:\",\n                          id: \"usernameConf\",\n                          name: \"usernameConf\",\n                          placeholder: \"username\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setUsernameDigitado(e.target.value),\n                          ref: register(\"usernameConf\", {\n                            required: {\n                              value: true,\n                              message: \"Informe seu username!\"\n                            },\n                            equalTo: {\n                              value: \"#usernamePsi\",\n                              message: \"Os emails devem ser iguais!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 459,\n                          columnNumber: 27\n                        }, this), errors.usernameConf && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.usernameConf.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Senha:\",\n                          id: \"senhaPsi\",\n                          name: \"senhaPsi\",\n                          placeholder: \"senha123\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setSenhaDigitado(e.target.value),\n                          ref: register(\"senhaPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Informe uma senha!\"\n                            },\n                            minLength: {\n                              value: 8,\n                              message: \"A senha deve ter no minimo 8 caracteres!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 490,\n                          columnNumber: 27\n                        }, this), errors.senhaPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.senhaPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 512,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 489,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Confirmar senha:\",\n                          id: \"confsenhaPsi\",\n                          name: \"confsenhaPsi\",\n                          placeholder: \"senha123\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setSenhaDigitado(e.target.value),\n                          ref: register(\"confsenhaPsi\", {\n                            required: {\n                              value: true,\n                              message: \"Confirme sua senha!\"\n                            },\n                            minLength: {\n                              value: 8,\n                              message: \"A senha deve ter no minimo 8 caracteres\"\n                            },\n                            equalTo: {\n                              value: \"#senhaPsi\",\n                              message: \"As Senhas devem ser iguais!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 518,\n                          columnNumber: 27\n                        }, this), errors.confsenhaPsi && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.confsenhaPsi.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 544,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `row ${styles.botoes}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: styles.btnAnterior,\n                  onclick: \"anterior()\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/confirmarCadastro\",\n                    children: \"Voltar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: styles.btnProximo,\n                  o: true,\n                  children: \"Confirma\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterSec, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(CadastroPsicologo, \"eWR/erZrlsUb+08zdqYpqfGyOxU=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = CadastroPsicologo;\nexport default CadastroPsicologo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroPsicologo\");","map":{"version":3,"sources":["C:/Users/bruno.ricardo.silva/Videos/Mulher Segura/MulherSegura/Site institucional/src/ui/CadastroPsicologo/index.jsx"],"names":["styles","Table","Input","Link","FooterSec","React","useState","useHistory","api","useForm","CadastroPsicologo","nomeDigitado","setNomeDigitado","cpfDigitado","setCpfDigitado","rgDigitado","setRgDigitado","usernameDigitado","setUsernameDigitado","senhaDigitado","setSenhaDigitado","datadenascimentoDigitado","setDataDeNascimentoDigitado","emailDigitado","setEmailDigitado","celularDigitado","setCelularDigitado","telefone1Digitado","setTelefone1Digitado","telefone2Digitado","setTelefone2Digitado","numeroDoCrpDigitado","setNumeroDoCrpDigitado","history","cadastrar","e","register","handleSubmit","formState","errors","onSubmit","data","console","log","preventDefault","post","nome","cpf","rg","username","senha","datadenascimento","email","celular","telefone1","telefone2","numeroDoCrp","then","resposta","push","catch","erro","vetor1","vetor2","container","boxForm","tabela","target","value","required","maxLength","message","nomePsi","errorMessages","minLength","number","cpfPsi","rgPsi","nascimentoPsi","crp","emailPsi","equalTo","confemailPsi","usernamePsi","usernameConf","senhaPsi","confsenhaPsi","botoes","btnAnterior","btnProximo"],"mappings":"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","sourcesContent":["import styles from \"./styles.module.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Input from \"../../common/Input\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FooterSec from \"../../common/FooterSec\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../../api\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction CadastroPsicologo() {\r\n  const [nomeDigitado, setNomeDigitado] = useState(\"\");\r\n  const [cpfDigitado, setCpfDigitado] = useState(\"\");\r\n  const [rgDigitado, setRgDigitado] = useState(\"\");\r\n  const [usernameDigitado, setUsernameDigitado] = useState(\"\");\r\n  const [senhaDigitado, setSenhaDigitado] = useState(\"\");\r\n  const [datadenascimentoDigitado, setDataDeNascimentoDigitado] = useState(\"\");\r\n  const [emailDigitado, setEmailDigitado] = useState(\"\");\r\n  const [celularDigitado, setCelularDigitado] = useState(\"\");\r\n  const [telefone1Digitado, setTelefone1Digitado] = useState(\"\");\r\n  const [telefone2Digitado, setTelefone2Digitado] = useState(\"\");\r\n  const [numeroDoCrpDigitado, setNumeroDoCrpDigitado] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  function cadastrar(e) {\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      formState: { errors },\r\n    } = useForm();\r\n    const onSubmit = (data) => console.log(data);\r\n  \r\n    e.preventDefault();\r\n\r\n    api\r\n      .post(\"/psicologos\", {\r\n        nome: nomeDigitado,\r\n        cpf: cpfDigitado,\r\n        rg: rgDigitado,\r\n        username: usernameDigitado,\r\n        senha: senhaDigitado,\r\n        datadenascimento: datadenascimentoDigitado,\r\n        email: emailDigitado,\r\n        celular: celularDigitado,\r\n        telefone1: telefone1Digitado,\r\n        telefone2: telefone2Digitado,\r\n        numeroDoCrp: numeroDoCrpDigitado,\r\n      })\r\n      .then((resposta) => {\r\n        history.push(\"/Login\");\r\n      })\r\n      .catch((erro) => {\r\n        console.log(\"Erro ao cadastrar vitima!\");\r\n      });\r\n  }\r\n  \r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm(cadastrar);\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  return (\r\n    <>\r\n      <img className={styles.vetor1} src=\"../img/esquerda.png\" alt=\"\" />\r\n      <img className={styles.vetor2} src=\"../img/direita.png\" alt=\"\" />\r\n      <section>\r\n        <div className={styles.container}>\r\n          <h2>Cadastro de psicólogo!</h2>\r\n          <p>\r\n            É através do cadastro a seguir que vamos conseguir validar seus\r\n            dados e cadastra-lo(a) em nosso sistema. Por favor, não deixe de\r\n            passar nenhum dado, é importante para encaminhar pessoas que\r\n            precisam de ajuda!\r\n          </p>\r\n          <div className={styles.boxForm}>\r\n            <form onSubmit={handleSubmit(cadastrar, onSubmit)}>\r\n              <div id=\"section1\">\r\n                <h4>Dados pessoais:</h4>\r\n                <div id=\"form_Psicologo\">\r\n                  <Table\r\n                    className={`table-bordered ${styles.tabela}`}\r\n                    width=\"100%\"\r\n                    cellpadding=\"0\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Nome completo\"\r\n                            id=\"nomePsi\"\r\n                            name=\"nomePsi\"\r\n                            placeholder=\"Jane Doe\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setNomeDigitado(e.target.value)}\r\n                            ref={register(\"nomePsi\", {\r\n                              required: \"Insira seu nome\",\r\n                              maxLength: {\r\n                                value: 5,\r\n                                message: \"O nome está muito grande\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.nomePsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.nomePsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"CPF:\"\r\n                            id=\"cpfPsi\"\r\n                            name=\"cpfPsi\"\r\n                            placeholder=\"___.___.___-__\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setCpfDigitado(e.target.value)}\r\n                            ref={register(\"cpfPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe a seu CPF!\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 11,\r\n                                message: \"Informe um CPF válido\",\r\n                              },\r\n                              minLength: {\r\n                                value: 11,\r\n                                message: \"Informe um CPF válido\",\r\n                              },\r\n                              number: {\r\n                                value: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.cpfPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.cpfPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"RG:\"\r\n                            id=\"RGPsi\"\r\n                            name=\"rgPsi\"\r\n                            placeholder=\"___.___.___-__\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setRgDigitado(e.target.value)}\r\n                            ref={register(\"rgPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu RG!\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 9,\r\n                                message: \"Informe um RG válido\",\r\n                              },\r\n                              minLength: {\r\n                                value: 9,\r\n                                message: \"Informe um RG válido\",\r\n                              },\r\n                              number: {\r\n                                value: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.rgPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.rgPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Celular:\"\r\n                            id=\"celular\"\r\n                            name=\"celular\"\r\n                            placeholder=\"(__)_____-____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setCelularDigitado(e.target.value)}\r\n                            ref={register(\"celular\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu celular!\",\r\n                              },\r\n                              minLength: {\r\n                                value: 11,\r\n                                message: \"Insira um celular válido\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 11,\r\n                                message: \"Insira um celular válido\",\r\n                              },\r\n                              number: {\r\n                                value: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.celular && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.celular.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Data de nascimento:\"\r\n                            id=\"nascimentoPsi\"\r\n                            name=\"nascimentoPsi\"\r\n                            placeholder=\"__/__/____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setDataDeNascimentoDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"nascimentoPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe a sua data de nascimento!\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 10,\r\n                                message:\r\n                                  \"Informe uma data válida ex. 21/03/1994\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.nascimentoPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.nascimentoPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"CRP:\"\r\n                            id=\"crp\"\r\n                            name=\"crp\"\r\n                            placeholder=\"06/000470-IS\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setNumeroDoCrpDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"crp\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe a seu CRP!\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 11,\r\n                                message: \"Informe um CRP válido\",\r\n                              },\r\n                              minLength: {\r\n                                value: 11,\r\n                                message: \"Informe um CRP válido\",\r\n                              },\r\n                              number: {\r\n                                value: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.crp && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.crp.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Telefone 1:\"\r\n                            id=\"telefone1\"\r\n                            name=\"telefone1\"\r\n                            placeholder=\"(__)____-____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setTelefone1Digitado(e.target.value)\r\n                            }\r\n                            ref={register(\"telefone1\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu telefone!\",\r\n                              },\r\n                              minLength: {\r\n                                value: 10,\r\n                                message: \"Insira um telefone válido!\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 10,\r\n                                message: \"Insira um telefone válido!\",\r\n                              },\r\n                              number: {\r\n                                value: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.telefone1 && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.telefone1.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Telefone 2:\"\r\n                            id=\"telefone2\"\r\n                            name=\"telefone2\"\r\n                            placeholder=\"(__)____-____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setTelefone2Digitado(e.target.value)\r\n                            }\r\n                            ref={register(\"telefone2\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu telefone!\",\r\n                              },\r\n                              minLength: {\r\n                                value: 10,\r\n                                message: \"Insira um telefone válido!\",\r\n                              },\r\n                              maxLength: {\r\n                                value: 10,\r\n                                message: \"Insira um telefone válido!\",\r\n                              },\r\n                              number: {\r\n                                value: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.telefone2 && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.telefone2.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n              <div id=\"section2\" className=\"secao-formulario\">\r\n                <h4>Contato e login:</h4>\r\n                <div id=\"form_contato_psicologo\">\r\n                  <Table\r\n                    className={`table table-bordered ${styles.tabela}`}\r\n                    width=\"100%\"\r\n                    cellpadding=\"0\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"E-mail:\"\r\n                            id=\"emailPsi\"\r\n                            name=\"emailPsi\"\r\n                            placeholder=\"email@email.com\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setEmailDigitado(e.target.value)}\r\n                            ref={register(\"emailPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu email!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.emailPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.emailPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Confirmar e-mail:\"\r\n                            id=\"confemailPsi\"\r\n                            placeholder=\"email@email.com\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setEmailDigitado(e.target.value)}\r\n                            ref={register(\"confemailPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Confirme o seu Email!\",\r\n                              },\r\n                              equalTo: {\r\n                                value: \"#email\",\r\n                                message: \"Os emails devem ser iguais!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.confemailPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.confemailPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Username:\"\r\n                            id=\"usernamePsi\"\r\n                            name=\"usernamePsi\"\r\n                            placeholder=\"username\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setUsernameDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"usernamePsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe seu username!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.usernamePsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.usernamePsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Confirmar username:\"\r\n                            id=\"usernameConf\"\r\n                            name=\"usernameConf\"\r\n                            placeholder=\"username\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setUsernameDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"usernameConf\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe seu username!\",\r\n                              },\r\n                              equalTo: {\r\n                                value: \"#usernamePsi\",\r\n                                message: \"Os emails devem ser iguais!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.usernameConf && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.usernameConf.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Senha:\"\r\n                            id=\"senhaPsi\"\r\n                            name=\"senhaPsi\"\r\n                            placeholder=\"senha123\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setSenhaDigitado(e.target.value)}\r\n                            ref={register(\"senhaPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe uma senha!\",\r\n                              },\r\n                              minLength: {\r\n                                value: 8,\r\n                                message:\r\n                                  \"A senha deve ter no minimo 8 caracteres!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.senhaPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.senhaPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Confirmar senha:\"\r\n                            id=\"confsenhaPsi\"\r\n                            name=\"confsenhaPsi\"\r\n                            placeholder=\"senha123\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setSenhaDigitado(e.target.value)}\r\n                            ref={register(\"confsenhaPsi\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Confirme sua senha!\",\r\n                              },\r\n                              minLength: {\r\n                                value: 8,\r\n                                message:\r\n                                  \"A senha deve ter no minimo 8 caracteres\",\r\n                              },\r\n                              equalTo: {\r\n                                value: \"#senhaPsi\",\r\n                                message: \"As Senhas devem ser iguais!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.confsenhaPsi && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.confsenhaPsi.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n              <div className={`row ${styles.botoes}`}>\r\n                <div className=\"col\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.btnAnterior}\r\n                    onclick=\"anterior()\"\r\n                  >\r\n                    <Link to=\"/confirmarCadastro\">Voltar</Link>\r\n                  </button>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <button type=\"submit\" className={styles.btnProximo} o>\r\n                    Confirma\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <FooterSec />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CadastroPsicologo;\r\n"]},"metadata":{},"sourceType":"module"}