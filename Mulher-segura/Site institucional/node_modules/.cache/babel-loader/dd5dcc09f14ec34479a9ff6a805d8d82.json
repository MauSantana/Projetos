{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno.ricardo.silva\\\\Videos\\\\Mulher Segura\\\\MulherSegura\\\\Site institucional\\\\src\\\\ui\\\\CadastroVitima\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport Input from \"../../common/Input\";\nimport Select from \"../../common/Select\";\nimport styles from \"./styles.module.css\";\nimport { Link } from \"react-router-dom\";\nimport FooterSec from \"../../common/FooterSec\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport api from \"../../api\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CadastroVitima() {\n  _s();\n\n  const [nomeDigitado, setNomeDigitado] = useState(\"\");\n  const [cpfDigitado, setCpfDigitado] = useState(\"\");\n  const [rgDigitado, setRgDigitado] = useState(\"\");\n  const [usernameDigitado, setUsernameDigitado] = useState(\"\");\n  const [senhaDigitado, setSenhaDigitado] = useState(\"\");\n  const [datadenascimentoDigitado, setDataDeNascimentoDigitado] = useState(\"\");\n  const [emailDigitado, setEmailDigitado] = useState(\"\");\n  const [celularDigitado, setCelularDigitado] = useState(\"\");\n  const [celular2Digitado, setCelular2Digitado] = useState(\"\");\n  const [filhosSNDigitado, setFilhosSNDigitado] = useState(\"\");\n  const [quantidadeDeFilhosDigitado, setQuantidadeDeFilhosDigitado] = useState(\"\");\n  const [estadoCivilDigitado, setEstadoCivilDigitado] = useState(\"\");\n  const [moraComParceiroDigitado, setMoraComParceiroDigitado] = useState(\"\");\n  const [nomeDoParceiroDigitado, setNomeDoParceiroDigitado] = useState(\"\");\n  const [cepDigitado, setCepDigitado] = useState(\"\");\n  const [numeroDaCasaDigitado, setNumeroDaCasaDigitado] = useState(\"\");\n  const [ruaDigitado, setRuaDigitado] = useState(\"\");\n  const [complementoDigitado, setComplementoDigitado] = useState(\"\");\n  const [referenciaDigitado, setReferenciaDigitado] = useState(\"\");\n  const [cidadeDigitado, setCidadeDigitado] = useState(\"\");\n  const [estadoDigitado, setEstadoDigitado] = useState(\"\");\n  const [bairroDigitado, setBairroDigitado] = useState(\"\");\n  const [nomeContatoEmergencialDigitado, setNomeContatoEmergencialDigitado] = useState(\"\");\n  const [emailEmergencialDigitado, setEmailEmergencialDigitado] = useState(\"\");\n  const [celularEmergencialDigitado, setCelularEmergencialDigitado] = useState(\"\");\n  const [telefoneEmergencialDigitado, setTelefoneEmergencialDigitado] = useState(\"\");\n  const history = useHistory();\n\n  function cadastrar(e) {\n    e.preventDefault();\n\n    if (filhosSNDigitado == \"Sim\") {\n      setFilhosSNDigitado(true);\n    } else {\n      setFilhosSNDigitado(false);\n    }\n\n    if (moraComParceiroDigitado == \"Sim\") {\n      setMoraComParceiroDigitado(true);\n    } else {\n      setMoraComParceiroDigitado(false);\n    }\n\n    api.post(\"/vitimas\", {\n      nome: nomeDigitado,\n      cpf: cpfDigitado,\n      rg: rgDigitado,\n      username: usernameDigitado,\n      senha: senhaDigitado,\n      datadenascimento: datadenascimentoDigitado,\n      email: emailDigitado,\n      celular: celularDigitado,\n      celular2: celular2Digitado,\n      filhosSN: filhosSNDigitado,\n      quantidadeDeFilhos: quantidadeDeFilhosDigitado,\n      estadoCivil: estadoCivilDigitado,\n      moraComParceiroSN: moraComParceiroDigitado,\n      nomeDoParceiro: nomeDoParceiroDigitado,\n      endereco: {\n        cep: cepDigitado,\n        numeroDaCasa: numeroDaCasaDigitado,\n        rua: ruaDigitado,\n        complemento: complementoDigitado,\n        referencia: referenciaDigitado,\n        cidade: cidadeDigitado,\n        estado: estadoDigitado,\n        bairro: bairroDigitado\n      },\n      contatosEmergenciais: [{\n        nome: nomeContatoEmergencialDigitado,\n        email: emailEmergencialDigitado,\n        celular: celularEmergencialDigitado,\n        telefone: telefoneEmergencialDigitado\n      }]\n    }).then(resposta => {\n      history.push(\"/Login\");\n    }).catch(erro => {\n      console.log(\"Erro ao cadastrar vitima!\");\n    });\n  }\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  if (required.equals(true)) {\n    errors.display.show;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.vetor1,\n        src: \"../img/esquerda.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.vetor2,\n        src: \"../img/direita.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastro de usu\\xE1rio!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xC9 atrav\\xE9s do cadastro a seguir que vamos conseguir te orientar e ajudar da melhor forma. Fique tranquila, os dados ser\\xE3o utilizados apenas em situa\\xE7\\xF5es de emerg\\xEAncia (ao realizar uma den\\xFAncia), para facilitar e otimizar o fornecimento de dados essenciais para que a policia te ajude!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.boxForm,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cadastroPessoal,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(cadastrar, onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"section1\",\n              className: styles.secaoFormulario,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Dados pessoais:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"form_usuario\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: `table-bordered ${styles.tabela}`,\n                  width: \"100%\",\n                  cellpadding: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Nome completo\",\n                          name: \"nome\",\n                          id: \"nome\",\n                          placeholder: \"Jane Doe\",\n                          type: \"text\",\n                          ref: register(\"nome\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu nome!\",\n                              maxLength: 50,\n                              message: \"O nome não deve ter mais de 50 caracteres\"\n                            }\n                          }),\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setNomeDigitado(e.target.value)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 27\n                        }, this), errors.nome && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.nome.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 29\n                        }, this), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Data de nascimento:\",\n                          name: \"nascimento\",\n                          id: \"nascimento\",\n                          placeholder: \"__/__/____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setDataDeNascimentoDigitado(e.target.value),\n                          ref: register(\"nascimento\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a sua data de nascimento!\",\n                              maxLength: 10,\n                              message: \"Informe uma data válida ex. 21/03/1994\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 27\n                        }, this), errors.nascimento && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.nascimento.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"CPF:\",\n                          id: \"cpf\",\n                          placeholder: \"___.___.___-__\",\n                          name: \"cpf\",\n                          type: \"number\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCpfDigitado(e.target.value),\n                          ref: register(\"cpf\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a seu CPF!\",\n                              maxLength: 11,\n                              message: \"Informe um CPF válido\",\n                              minLength: 11,\n                              message: \"Informe um CPF válido\",\n                              number: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 27\n                        }, this), errors.cpf && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.cpf.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"RG:\",\n                          id: \"rg\",\n                          name: \"rg\",\n                          placeholder: \"________-_\",\n                          type: \"number\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setRgDigitado(e.target.value),\n                          ref: register(\"nome\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a seu RG!\",\n                              maxLength: 9,\n                              message: \"Informe um RG válido\",\n                              minLength: 9,\n                              message: \"Informe um RG válido\",\n                              number: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 27\n                        }, this), errors.rg && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.rg.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 249,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Select, {\n                          label: \"Possui filhos?\",\n                          id: \"filhos\",\n                          outline: false,\n                          height: \"40px\",\n                          name: \"filhos\",\n                          options: [[\"Sim\", \"Sim\"], [\"Não\", \"Não\"]],\n                          onChange: e => setFilhosSNDigitado(e.target.value),\n                          ref: register(\"filhos\", {\n                            required: {\n                              value: true,\n                              message: \"Selecione uma opção\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 27\n                        }, this), errors.filhos && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.filhos.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Quantos?\",\n                          id: \"qtdFilhos\",\n                          name: \"qtdFilhos\",\n                          placeholder: \"0\",\n                          type: \"number\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setQuantidadeDeFilhosDigitado(e.target.value),\n                          ref: register(\"qtdFilhos\", {\n                            required: {\n                              value: true,\n                              message: \"Digite a quantidade de filhos que você possui\",\n                              number: true,\n                              message: \"Insira apenas números\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 27\n                        }, this), errors.qtdFilhos && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.qtdFilhos.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Select, {\n                          label: \"Estado civil:\",\n                          id: \"estadoCivil\",\n                          outline: false,\n                          height: \"40px\",\n                          name: \"estadoCivil\",\n                          options: [[\"Solteira\", \"Solteira\"], [\"Casada\", \"Casada\"], [\"Viúva\", \"Viúva\"], [\"Namorando\", \"Namorando\"], [\"Divorciada\", \"Divorciada\"]],\n                          onChange: e => setEstadoCivilDigitado(e.target.value),\n                          ref: register(\"estadoCivil\", {\n                            required: {\n                              value: true,\n                              message: \"Selecione uma opção\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 27\n                        }, this), errors.estadoCivil && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.estadoCivil.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 338,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Select, {\n                          label: \"Mora com o parceiro?\",\n                          id: \"temParceiro\",\n                          outline: false,\n                          height: \"40px\",\n                          name: \"temParceiro\",\n                          options: [[\"Sim\", \"Sim\"], [\"Não\", \"Não\"]],\n                          onChange: e => setMoraComParceiroDigitado(e.target.value),\n                          ref: register(\"temParceiro\", {\n                            required: {\n                              value: true,\n                              message: \"Selecione uma opção\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 27\n                        }, this), errors.temParceiro && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.temParceiro.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 365,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Nome do parceiro:\",\n                          id: \"nomeParceiro\",\n                          name: \"nomeParceiro\",\n                          placeholder: \"Jo\\xE3o Doe\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setNomeDoParceiroDigitado(e.target.value),\n                          ref: register(\"nomeParceiro\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o nome do seu parceiro\",\n                              maxLength: 50,\n                              message: \"O nome não deve ter mais de 50 caracteres\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 27\n                        }, this), errors.nomeParceiro && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.nomeParceiro.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 395,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Login:\",\n                          id: \"login\",\n                          name: \"login\",\n                          placeholder: \"username\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setUsernameDigitado(e.target.value),\n                          ref: register(\"login\", {\n                            required: {\n                              value: true,\n                              message: \"Informe seu login!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 27\n                        }, this), errors.login && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.login.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 420,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"section2\",\n              className: styles.secaoFormulario,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Endere\\xE7o:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"form_endereco\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: `table-bordered ${styles.tabela}`,\n                  width: \"100%\",\n                  cellpadding: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"35%\",\n                        colspan: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Rua:\",\n                          id: \"rua\",\n                          name: \"rua\",\n                          placeholder: \"Rua Um\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setRuaDigitado(e.target.value),\n                          ref: register(\"rua\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu bairro de residência atual!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 442,\n                          columnNumber: 27\n                        }, this), errors.rua && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.rua.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 460,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"30%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"N\\xFAmero:\",\n                          id: \"numero\",\n                          name: \"numero\",\n                          placeholder: \"0000\",\n                          type: \"number\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setNumeroDaCasaDigitado(e.target.value),\n                          ref: register(\"numero\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o número da sua residência!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 466,\n                          columnNumber: 27\n                        }, this), errors.numero && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.numero.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 485,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"35%\",\n                        colspan: \"2\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Bairro:\",\n                          id: \"bairro\",\n                          name: \"bairro\",\n                          placeholder: \"PInheiros\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setBairroDigitado(e.target.value),\n                          ref: register(\"bairro\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu bairro de residência atual!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 27\n                        }, this), errors.bairro && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.bairro.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 511,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"30%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Complemento:\",\n                          id: \"complemento\",\n                          name: \"complemento\",\n                          placeholder: \"Casa dos fundos\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setComplementoDigitado(e.target.value),\n                          ref: register(\"complemento\", {\n                            maxLength: {\n                              value: 50,\n                              message: \"O complemento digitado está muito longo\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 517,\n                          columnNumber: 27\n                        }, this), errors.complemento && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.complemento.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"40%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Cidade:\",\n                          id: \"cidade\",\n                          name: \"cidade\",\n                          placeholder: \"S\\xE3o Paulo\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCidadeDigitado(e.target.value),\n                          ref: register(\"cidade\", {\n                            required: {\n                              value: true,\n                              message: \"Informe a cidade onde você mora atualmente!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 545,\n                          columnNumber: 27\n                        }, this), errors.cidade && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.cidade.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 563,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"30%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"CEP:\",\n                          id: \"cep\",\n                          name: \"cep\",\n                          placeholder: \"_____-___\",\n                          type: \"number\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCepDigitado(e.target.value),\n                          ref: register(\"cep\", {\n                            required: {\n                              value: true,\n                              message: \"Digite um CEP válido\",\n                              minLength: 8,\n                              message: \"O CEP precisa ter 8 números\",\n                              number: \"Insira apenas números\",\n                              maxLength: 8,\n                              message: \"O CEP tem apenas 8 números\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 569,\n                          columnNumber: 27\n                        }, this), errors.cep && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.cep.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 592,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 568,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"30%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Estado:\",\n                          id: \"estado\",\n                          name: \"estado\",\n                          placeholder: \"S\\xE3o Paulo\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setEstadoDigitado(e.target.value),\n                          ref: register(\"estado\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu estado de residência!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 598,\n                          columnNumber: 27\n                        }, this), errors.estado && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.estado.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 615,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 597,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"35%\",\n                        colspan: \"3\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Refer\\xEAncia:\",\n                          id: \"referencia\",\n                          name: \"referencia\",\n                          placeholder: \"Ao lado da padaria\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setReferenciaDigitado(e.target.value),\n                          ref: register(\"referencia\", {\n                            required: {\n                              value: true,\n                              message: \"Informe um local de referência!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 623,\n                          columnNumber: 27\n                        }, this), errors.referencia && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.referencia.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 642,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 622,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"section3\",\n              className: styles.secaoFormulario,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Contato e login:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"form_contato\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: `table-bordered ${styles.tabela}`,\n                  width: \"100%\",\n                  cellpadding: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"E-mail:\",\n                          id: \"email\",\n                          name: \"email\",\n                          placeholder: \"email@email.com\",\n                          type: \"email\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setEmailDigitado(e.target.value),\n                          ref: register(\"email\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu Email!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 663,\n                          columnNumber: 27\n                        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.email.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 680,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 662,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Senha:\",\n                          id: \"senha\",\n                          name: \"senha\",\n                          placeholder: \"senha123\",\n                          type: \"password\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setSenhaDigitado(e.target.value),\n                          ref: register(\"senha\", {\n                            required: {\n                              value: true,\n                              message: \"Informe uma senha!\",\n                              minLength: 8,\n                              message: \"A senha deve ter no minimo 8 caracteres!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 686,\n                          columnNumber: 27\n                        }, this), errors.senha && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.senha.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 706,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Confirmar e-mail:\",\n                          id: \"confemail\",\n                          name: \"confemail\",\n                          placeholder: \"email@email.com\",\n                          type: \"email\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setEmailDigitado(e.target.value),\n                          ref: register(\"confemail\", {\n                            required: {\n                              value: true,\n                              message: \"Confirme o seu Email!\",\n                              equalTo: \"#email\",\n                              message: \"Os Emails devem ser iguais!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 714,\n                          columnNumber: 27\n                        }, this), errors.confemail && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.confemail.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 733,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 713,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Confirmar senha:\",\n                          id: \"confsenha\",\n                          name: \"confsenha\",\n                          placeholder: \"senha123\",\n                          type: \"Password\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setSenhaDigitado(e.target.value),\n                          ref: register(\"confsenha\", {\n                            required: {\n                              value: true,\n                              message: \"Confirme sua senha!\",\n                              minLength: 8,\n                              message: \"A senha deve ter no minimo 8 caracteres\",\n                              equalTo: \"#senha\",\n                              message: \"As Senhas devem ser iguais!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 739,\n                          columnNumber: 27\n                        }, this), errors.confsenha && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.confsenha.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 763,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 738,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Telefone:\",\n                          id: \"telefone\",\n                          name: \"telefone\",\n                          placeholder: \"(__)____-____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCelularDigitado(e.target.value),\n                          ref: register(\"telefone\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu telefone!\",\n                              minLength: 10,\n                              message: \"Insira um telefone válido!\",\n                              maxLength: 10,\n                              message: \"Insira um telefone válido!\",\n                              number: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 771,\n                          columnNumber: 27\n                        }, this), \" \", errors.telefone && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.telefone.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 796,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 770,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        width: \"50%\",\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          label: \"Celular:\",\n                          id: \"celular\",\n                          name: \"celular\",\n                          placeholder: \"(__)_____-____\",\n                          type: \"text\",\n                          outline: false,\n                          height: \"40px\",\n                          onChange: e => setCelular2Digitado(e.target.value),\n                          ref: register(\"celular\", {\n                            required: {\n                              value: true,\n                              message: \"Informe o seu celular!\",\n                              minLength: 11,\n                              message: \"Insira um celular válido\",\n                              maxLength: 11,\n                              message: \"Insira um celular válido\",\n                              number: true,\n                              message: \"Insira apenas números!\"\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 802,\n                          columnNumber: 27\n                        }, this), errors.celular && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: styles.errorMessages,\n                          children: errors.celular.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 829,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 801,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"section4\",\n              className: styles.secaoFormulario,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Contato de emerg\\xEAncia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                className: `table-bordered ${styles.tabela}`,\n                width: \"100%\",\n                cellpadding: \"0\",\n                children: /*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      width: \"50%\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        label: \"Nome completo:\",\n                        id: \"nomeEmerg\",\n                        name: \"nomeEmerg\",\n                        placeholder: \"Jane Doe\",\n                        type: \"text\",\n                        outline: false,\n                        height: \"40px\",\n                        onChange: e => setNomeContatoEmergencialDigitado(e.target.value),\n                        ref: register(\"nomeEmerg\", {\n                          required: {\n                            value: true,\n                            message: \"Informe o nome do seu contato de emergência!\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 850,\n                        columnNumber: 25\n                      }, this), errors.nomeEmerg && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: styles.errorMessages,\n                        children: errors.nomeEmerg.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 870,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 849,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      width: \"50%\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        label: \"E-mail:\",\n                        id: \"emailEmerg\",\n                        name: \"emailEmerg\",\n                        placeholder: \"email@email.com\",\n                        type: \"Email\",\n                        outline: false,\n                        height: \"40px\",\n                        onChange: e => setEmailEmergencialDigitado(e.target.value),\n                        ref: register(\"emailEmerg\", {\n                          required: {\n                            value: true,\n                            message: \"Informe o Email do seu contato de emergêcia!\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 876,\n                        columnNumber: 25\n                      }, this), errors.emailEmerg && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: styles.errorMessages,\n                        children: errors.emailEmerg.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 896,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 875,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      width: \"50%\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        label: \"Telefone:\",\n                        id: \"telefoneEmerg\",\n                        name: \"telefoneEmerg\",\n                        placeholder: \"(__)____-____\",\n                        type: \"text\",\n                        outline: false,\n                        height: \"40px\",\n                        onChange: e => setTelefoneEmergencialDigitado(e.target.value),\n                        ref: register(\"telefoneEmerg\", {\n                          required: {\n                            value: true,\n                            message: \"Informe o telefone do seu contato de emergência\",\n                            minLength: 10,\n                            message: \"Insira um telefone válido\",\n                            maxLength: 10,\n                            message: \"Insira um telefone válido\",\n                            number: true,\n                            message: \"Insira apenas números!\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 904,\n                        columnNumber: 25\n                      }, this), errors.telefoneEmerg && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: styles.errorMessages,\n                        children: errors.telefoneEmerg.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 932,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 903,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      width: \"50%\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        label: \"Confirmar e-mail:\",\n                        id: \"confemailEmerg\",\n                        placeholder: \"email@email.com\",\n                        type: \"Email\",\n                        outline: false,\n                        height: \"40px\",\n                        onChange: e => setEmailEmergencialDigitado(e.target.value),\n                        ref: register(\"confemailEmerg\", {\n                          required: {\n                            value: true,\n                            message: \"Confirme o email do seu contato de emergência\",\n                            equalTo: \"#emailEmerg\",\n                            message: \"Os Emails devem ser iguais!\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 938,\n                        columnNumber: 25\n                      }, this), errors.confemailEmerg && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: styles.errorMessages,\n                        children: errors.confemailEmerg.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 960,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      width: \"50%\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        label: \"Celular:\",\n                        id: \"celularEmerg\",\n                        name: \"celularEmerg\",\n                        placeholder: \"(__)_____-____\",\n                        type: \"text\",\n                        outline: false,\n                        height: \"40px\",\n                        onChange: e => setCelularEmergencialDigitado(e.target.value),\n                        ref: register(\"celularEmerg\", {\n                          required: {\n                            value: true,\n                            message: \"Informe o celular do seu contato de emergência\",\n                            minLength: 11,\n                            message: \"Informe um número de celular valido!\",\n                            maxLength: 11,\n                            message: \"Informe um número de celular valido!\",\n                            number: true,\n                            message: \"Insira apenas números!\"\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 968,\n                        columnNumber: 25\n                      }, this), errors.celularEmerg && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: styles.errorMessages,\n                        children: errors.celularEmerg.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 996,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 967,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 966,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `row ${styles.botoes}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: styles.btnAnterior,\n                  onclick: \"anterior()\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/confirmarCadastro\",\n                    children: \"Voltar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1012,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `col ${styles.btnProximoWrapper}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: styles.btnProximo,\n                  children: \"Confirma\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterSec, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CadastroVitima, \"4nW72lzFkdwrPOvorySMPBvNRIg=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = CadastroVitima;\nexport default CadastroVitima;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroVitima\");","map":{"version":3,"sources":["C:/Users/bruno.ricardo.silva/Videos/Mulher Segura/MulherSegura/Site institucional/src/ui/CadastroVitima/index.jsx"],"names":["Table","Input","Select","styles","Link","FooterSec","React","useState","useHistory","api","useForm","CadastroVitima","nomeDigitado","setNomeDigitado","cpfDigitado","setCpfDigitado","rgDigitado","setRgDigitado","usernameDigitado","setUsernameDigitado","senhaDigitado","setSenhaDigitado","datadenascimentoDigitado","setDataDeNascimentoDigitado","emailDigitado","setEmailDigitado","celularDigitado","setCelularDigitado","celular2Digitado","setCelular2Digitado","filhosSNDigitado","setFilhosSNDigitado","quantidadeDeFilhosDigitado","setQuantidadeDeFilhosDigitado","estadoCivilDigitado","setEstadoCivilDigitado","moraComParceiroDigitado","setMoraComParceiroDigitado","nomeDoParceiroDigitado","setNomeDoParceiroDigitado","cepDigitado","setCepDigitado","numeroDaCasaDigitado","setNumeroDaCasaDigitado","ruaDigitado","setRuaDigitado","complementoDigitado","setComplementoDigitado","referenciaDigitado","setReferenciaDigitado","cidadeDigitado","setCidadeDigitado","estadoDigitado","setEstadoDigitado","bairroDigitado","setBairroDigitado","nomeContatoEmergencialDigitado","setNomeContatoEmergencialDigitado","emailEmergencialDigitado","setEmailEmergencialDigitado","celularEmergencialDigitado","setCelularEmergencialDigitado","telefoneEmergencialDigitado","setTelefoneEmergencialDigitado","history","cadastrar","e","preventDefault","post","nome","cpf","rg","username","senha","datadenascimento","email","celular","celular2","filhosSN","quantidadeDeFilhos","estadoCivil","moraComParceiroSN","nomeDoParceiro","endereco","cep","numeroDaCasa","rua","complemento","referencia","cidade","estado","bairro","contatosEmergenciais","telefone","then","resposta","push","catch","erro","console","log","register","handleSubmit","formState","errors","onSubmit","data","required","equals","display","show","container","vetor1","vetor2","boxForm","cadastroPessoal","secaoFormulario","tabela","value","message","maxLength","target","errorMessages","nascimento","minLength","number","filhos","qtdFilhos","temParceiro","nomeParceiro","login","numero","equalTo","confemail","confsenha","nomeEmerg","emailEmerg","telefoneEmerg","confemailEmerg","celularEmerg","botoes","btnAnterior","btnProximoWrapper","btnProximo"],"mappings":"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","sourcesContent":["import { Table } from \"react-bootstrap\";\r\nimport Input from \"../../common/Input\";\r\nimport Select from \"../../common/Select\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FooterSec from \"../../common/FooterSec\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../../api\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction CadastroVitima() {\r\n  const [nomeDigitado, setNomeDigitado] = useState(\"\");\r\n  const [cpfDigitado, setCpfDigitado] = useState(\"\");\r\n  const [rgDigitado, setRgDigitado] = useState(\"\");\r\n  const [usernameDigitado, setUsernameDigitado] = useState(\"\");\r\n  const [senhaDigitado, setSenhaDigitado] = useState(\"\");\r\n  const [datadenascimentoDigitado, setDataDeNascimentoDigitado] = useState(\"\");\r\n  const [emailDigitado, setEmailDigitado] = useState(\"\");\r\n  const [celularDigitado, setCelularDigitado] = useState(\"\");\r\n  const [celular2Digitado, setCelular2Digitado] = useState(\"\");\r\n  const [filhosSNDigitado, setFilhosSNDigitado] = useState(\"\");\r\n  const [quantidadeDeFilhosDigitado, setQuantidadeDeFilhosDigitado] =\r\n    useState(\"\");\r\n  const [estadoCivilDigitado, setEstadoCivilDigitado] = useState(\"\");\r\n  const [moraComParceiroDigitado, setMoraComParceiroDigitado] = useState(\"\");\r\n  const [nomeDoParceiroDigitado, setNomeDoParceiroDigitado] = useState(\"\");\r\n  const [cepDigitado, setCepDigitado] = useState(\"\");\r\n  const [numeroDaCasaDigitado, setNumeroDaCasaDigitado] = useState(\"\");\r\n  const [ruaDigitado, setRuaDigitado] = useState(\"\");\r\n  const [complementoDigitado, setComplementoDigitado] = useState(\"\");\r\n  const [referenciaDigitado, setReferenciaDigitado] = useState(\"\");\r\n  const [cidadeDigitado, setCidadeDigitado] = useState(\"\");\r\n  const [estadoDigitado, setEstadoDigitado] = useState(\"\");\r\n  const [bairroDigitado, setBairroDigitado] = useState(\"\");\r\n  const [nomeContatoEmergencialDigitado, setNomeContatoEmergencialDigitado] =\r\n    useState(\"\");\r\n  const [emailEmergencialDigitado, setEmailEmergencialDigitado] = useState(\"\");\r\n  const [celularEmergencialDigitado, setCelularEmergencialDigitado] =\r\n    useState(\"\");\r\n  const [telefoneEmergencialDigitado, setTelefoneEmergencialDigitado] =\r\n    useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  function cadastrar(e) {\r\n    e.preventDefault();\r\n\r\n    if (filhosSNDigitado == \"Sim\") {\r\n      setFilhosSNDigitado(true);\r\n    } else {\r\n      setFilhosSNDigitado(false);\r\n    }\r\n\r\n    if (moraComParceiroDigitado == \"Sim\") {\r\n      setMoraComParceiroDigitado(true);\r\n    } else {\r\n      setMoraComParceiroDigitado(false);\r\n    }\r\n\r\n    api\r\n      .post(\"/vitimas\", {\r\n        nome: nomeDigitado,\r\n        cpf: cpfDigitado,\r\n        rg: rgDigitado,\r\n        username: usernameDigitado,\r\n        senha: senhaDigitado,\r\n        datadenascimento: datadenascimentoDigitado,\r\n        email: emailDigitado,\r\n        celular: celularDigitado,\r\n        celular2: celular2Digitado,\r\n        filhosSN: filhosSNDigitado,\r\n        quantidadeDeFilhos: quantidadeDeFilhosDigitado,\r\n        estadoCivil: estadoCivilDigitado,\r\n        moraComParceiroSN: moraComParceiroDigitado,\r\n        nomeDoParceiro: nomeDoParceiroDigitado,\r\n        endereco: {\r\n          cep: cepDigitado,\r\n          numeroDaCasa: numeroDaCasaDigitado,\r\n          rua: ruaDigitado,\r\n          complemento: complementoDigitado,\r\n          referencia: referenciaDigitado,\r\n          cidade: cidadeDigitado,\r\n          estado: estadoDigitado,\r\n          bairro: bairroDigitado,\r\n        },\r\n        contatosEmergenciais: [\r\n          {\r\n            nome: nomeContatoEmergencialDigitado,\r\n            email: emailEmergencialDigitado,\r\n            celular: celularEmergencialDigitado,\r\n            telefone: telefoneEmergencialDigitado,\r\n          },\r\n        ],\r\n      })\r\n      .then((resposta) => {\r\n        history.push(\"/Login\");\r\n      })\r\n      .catch((erro) => {\r\n        console.log(\"Erro ao cadastrar vitima!\");\r\n      });\r\n  }\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  if (required.equals(true)) {\r\n    errors.display.show\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <img className={styles.vetor1} src=\"../img/esquerda.png\" alt=\"\" />\r\n        <img className={styles.vetor2} src=\"../img/direita.png\" alt=\"\" />\r\n        <h2>Cadastro de usuário!</h2>\r\n        <p>\r\n          É através do cadastro a seguir que vamos conseguir te orientar e\r\n          ajudar da melhor forma. Fique tranquila, os dados serão utilizados\r\n          apenas em situações de emergência (ao realizar uma denúncia), para\r\n          facilitar e otimizar o fornecimento de dados essenciais para que a\r\n          policia te ajude!\r\n        </p>\r\n        <div className={styles.boxForm}>\r\n          <div className={styles.cadastroPessoal}>\r\n            <form onSubmit={handleSubmit(cadastrar, onSubmit)}>\r\n              <div id=\"section1\" className={styles.secaoFormulario}>\r\n                <h4>Dados pessoais:</h4>\r\n                <div id=\"form_usuario\">\r\n                  <Table\r\n                    className={`table-bordered ${styles.tabela}`}\r\n                    width=\"100%\"\r\n                    cellpadding=\"0\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Nome completo\"\r\n                            name=\"nome\"\r\n                            id=\"nome\"\r\n                            placeholder=\"Jane Doe\"\r\n                            type=\"text\"\r\n                            ref={register(\"nome\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu nome!\",\r\n                                maxLength: 50,\r\n                                message:\"O nome não deve ter mais de 50 caracteres\",\r\n                              },\r\n                            })}\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setNomeDigitado(e.target.value)}\r\n                          />\r\n                          {errors.nome && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.nome.message}\r\n                            </p>\r\n                          )}{\" \"}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Data de nascimento:\"\r\n                            name=\"nascimento\"\r\n                            id=\"nascimento\"\r\n                            placeholder=\"__/__/____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setDataDeNascimentoDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"nascimento\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe a sua data de nascimento!\",\r\n                                maxLength: 10,\r\n                                message:\r\n                                  \"Informe uma data válida ex. 21/03/1994\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.nascimento && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.nascimento.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"CPF:\"\r\n                            id=\"cpf\"\r\n                            placeholder=\"___.___.___-__\"\r\n                            name=\"cpf\"\r\n                            type=\"number\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setCpfDigitado(e.target.value)}\r\n                            ref={register(\"cpf\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe a seu CPF!\",\r\n                                maxLength: 11,\r\n                                message: \"Informe um CPF válido\",\r\n                                minLength: 11,\r\n                                message: \"Informe um CPF válido\",\r\n                                number: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.cpf && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.cpf.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"RG:\"\r\n                            id=\"rg\"\r\n                            name=\"rg\"\r\n                            placeholder=\"________-_\"\r\n                            type=\"number\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setRgDigitado(e.target.value)}\r\n                            ref={register(\"nome\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe a seu RG!\",\r\n                                maxLength: 9,\r\n                                message: \"Informe um RG válido\",\r\n                                minLength: 9,\r\n                                message: \"Informe um RG válido\",\r\n                                number: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.rg && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.rg.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Select\r\n                            label=\"Possui filhos?\"\r\n                            id=\"filhos\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            name=\"filhos\"\r\n                            options={[\r\n                              [\"Sim\", \"Sim\"],\r\n                              [\"Não\", \"Não\"],\r\n                            ]}\r\n                            onChange={(e) =>\r\n                              setFilhosSNDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"filhos\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Selecione uma opção\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.filhos && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.filhos.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Quantos?\"\r\n                            id=\"qtdFilhos\"\r\n                            name=\"qtdFilhos\"\r\n                            placeholder=\"0\"\r\n                            type=\"number\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setQuantidadeDeFilhosDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"qtdFilhos\", {\r\n                              required: {\r\n                                value: true,\r\n                                message:\r\n                                  \"Digite a quantidade de filhos que você possui\",\r\n                                number: true,\r\n                                message: \"Insira apenas números\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.qtdFilhos && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.qtdFilhos.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Select\r\n                            label=\"Estado civil:\"\r\n                            id=\"estadoCivil\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            name=\"estadoCivil\"\r\n                            options={[\r\n                              [\"Solteira\", \"Solteira\"],\r\n                              [\"Casada\", \"Casada\"],\r\n                              [\"Viúva\", \"Viúva\"],\r\n                              [\"Namorando\", \"Namorando\"],\r\n                              [\"Divorciada\", \"Divorciada\"],\r\n                            ]}\r\n                            onChange={(e) =>\r\n                              setEstadoCivilDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"estadoCivil\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Selecione uma opção\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.estadoCivil && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.estadoCivil.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Select\r\n                            label=\"Mora com o parceiro?\"\r\n                            id=\"temParceiro\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            name=\"temParceiro\"\r\n                            options={[\r\n                              [\"Sim\", \"Sim\"],\r\n                              [\"Não\", \"Não\"],\r\n                            ]}\r\n                            onChange={(e) =>\r\n                              setMoraComParceiroDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"temParceiro\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Selecione uma opção\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.temParceiro && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.temParceiro.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Nome do parceiro:\"\r\n                            id=\"nomeParceiro\"\r\n                            name=\"nomeParceiro\"\r\n                            placeholder=\"João Doe\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setNomeDoParceiroDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"nomeParceiro\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o nome do seu parceiro\",\r\n                                maxLength: 50,\r\n                                message:\r\n                                  \"O nome não deve ter mais de 50 caracteres\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.nomeParceiro && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.nomeParceiro.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Login:\"\r\n                            id=\"login\"\r\n                            name=\"login\"\r\n                            placeholder=\"username\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setUsernameDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"login\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe seu login!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.login && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.login.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n\r\n              <div id=\"section2\" className={styles.secaoFormulario}>\r\n                <h4>Endereço:</h4>\r\n                <div id=\"form_endereco\">\r\n                  <Table\r\n                    className={`table-bordered ${styles.tabela}`}\r\n                    width=\"100%\"\r\n                    cellpadding=\"0\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <td width=\"35%\" colspan=\"2\">\r\n                          <Input\r\n                            label=\"Rua:\"\r\n                            id=\"rua\"\r\n                            name=\"rua\"\r\n                            placeholder=\"Rua Um\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setRuaDigitado(e.target.value)}\r\n                            ref={register(\"rua\", {\r\n                              required: {\r\n                                value: true,\r\n                                message:\r\n                                  \"Informe o seu bairro de residência atual!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.rua && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.rua.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"30%\">\r\n                          <Input\r\n                            label=\"Número:\"\r\n                            id=\"numero\"\r\n                            name=\"numero\"\r\n                            placeholder=\"0000\"\r\n                            type=\"number\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setNumeroDaCasaDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"numero\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o número da sua residência!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.numero && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.numero.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"35%\" colspan=\"2\">\r\n                          <Input\r\n                            label=\"Bairro:\"\r\n                            id=\"bairro\"\r\n                            name=\"bairro\"\r\n                            placeholder=\"PInheiros\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setBairroDigitado(e.target.value)}\r\n                            ref={register(\"bairro\", {\r\n                              required: {\r\n                                value: true,\r\n                                message:\r\n                                  \"Informe o seu bairro de residência atual!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.bairro && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.bairro.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"30%\">\r\n                          <Input\r\n                            label=\"Complemento:\"\r\n                            id=\"complemento\"\r\n                            name=\"complemento\"\r\n                            placeholder=\"Casa dos fundos\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setComplementoDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"complemento\", {\r\n                              maxLength: {\r\n                                value: 50,\r\n                                message:\r\n                                  \"O complemento digitado está muito longo\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.complemento && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.complemento.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"40%\">\r\n                          <Input\r\n                            label=\"Cidade:\"\r\n                            id=\"cidade\"\r\n                            name=\"cidade\"\r\n                            placeholder=\"São Paulo\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setCidadeDigitado(e.target.value)}\r\n                            ref={register(\"cidade\", {\r\n                              required: {\r\n                                value: true,\r\n                                message:\r\n                                  \"Informe a cidade onde você mora atualmente!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.cidade && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.cidade.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"30%\">\r\n                          <Input\r\n                            label=\"CEP:\"\r\n                            id=\"cep\"\r\n                            name=\"cep\"\r\n                            placeholder=\"_____-___\"\r\n                            type=\"number\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setCepDigitado(e.target.value)}\r\n                            ref={register(\"cep\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Digite um CEP válido\",\r\n                                minLength: 8,\r\n                                message: \"O CEP precisa ter 8 números\",\r\n                                number: \"Insira apenas números\",\r\n\r\n                                maxLength: 8,\r\n                                message: \"O CEP tem apenas 8 números\"\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.cep && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.cep.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"30%\">\r\n                          <Input\r\n                            label=\"Estado:\"\r\n                            id=\"estado\"\r\n                            name=\"estado\"\r\n                            placeholder=\"São Paulo\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setEstadoDigitado(e.target.value)}\r\n                            ref={register(\"estado\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu estado de residência!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.estado && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.estado.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"35%\" colspan=\"3\">\r\n                          <Input\r\n                            label=\"Referência:\"\r\n                            id=\"referencia\"\r\n                            name=\"referencia\"\r\n                            placeholder=\"Ao lado da padaria\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setReferenciaDigitado(e.target.value)\r\n                            }\r\n                            ref={register(\"referencia\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe um local de referência!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.referencia && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.referencia.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n              <div id=\"section3\" className={styles.secaoFormulario}>\r\n                <h4>Contato e login:</h4>\r\n                <div id=\"form_contato\">\r\n                  <Table\r\n                    className={`table-bordered ${styles.tabela}`}\r\n                    width=\"100%\"\r\n                    cellpadding=\"0\"\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"E-mail:\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email@email.com\"\r\n                            type=\"email\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setEmailDigitado(e.target.value)}\r\n                            ref={register(\"email\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu Email!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.email && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.email.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Senha:\"\r\n                            id=\"senha\"\r\n                            name=\"senha\"\r\n                            placeholder=\"senha123\"\r\n                            type=\"password\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setSenhaDigitado(e.target.value)}\r\n                            ref={register(\"senha\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe uma senha!\",\r\n                                minLength: 8,\r\n                                message:\r\n                                  \"A senha deve ter no minimo 8 caracteres!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.senha && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.senha.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Confirmar e-mail:\"\r\n                            id=\"confemail\"\r\n                            name=\"confemail\"\r\n                            placeholder=\"email@email.com\"\r\n                            type=\"email\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setEmailDigitado(e.target.value)}\r\n                            ref={register(\"confemail\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Confirme o seu Email!\",\r\n                                equalTo: \"#email\",\r\n                                message: \"Os Emails devem ser iguais!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.confemail && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.confemail.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Confirmar senha:\"\r\n                            id=\"confsenha\"\r\n                            name=\"confsenha\"\r\n                            placeholder=\"senha123\"\r\n                            type=\"Password\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setSenhaDigitado(e.target.value)}\r\n                            ref={register(\"confsenha\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Confirme sua senha!\",\r\n\r\n                                minLength: 8,\r\n                                message:\r\n                                  \"A senha deve ter no minimo 8 caracteres\",\r\n\r\n                                equalTo: \"#senha\",\r\n                                message: \"As Senhas devem ser iguais!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.confsenha && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.confsenha.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Telefone:\"\r\n                            id=\"telefone\"\r\n                            name=\"telefone\"\r\n                            placeholder=\"(__)____-____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) => setCelularDigitado(e.target.value)}\r\n                            ref={register(\"telefone\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu telefone!\",\r\n\r\n                                minLength: 10,\r\n                                message: \"Insira um telefone válido!\",\r\n\r\n                                maxLength: 10,\r\n                                message: \"Insira um telefone válido!\",\r\n                                number: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />{\" \"}\r\n                          {errors.telefone && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.telefone.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                          <Input\r\n                            label=\"Celular:\"\r\n                            id=\"celular\"\r\n                            name=\"celular\"\r\n                            placeholder=\"(__)_____-____\"\r\n                            type=\"text\"\r\n                            outline={false}\r\n                            height=\"40px\"\r\n                            onChange={(e) =>\r\n                              setCelular2Digitado(e.target.value)\r\n                            }\r\n                            ref={register(\"celular\", {\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Informe o seu celular!\",\r\n\r\n                                minLength: 11,\r\n                                message: \"Insira um celular válido\",\r\n\r\n                                maxLength: 11,\r\n                                message: \"Insira um celular válido\",\r\n                                number: true,\r\n                                message: \"Insira apenas números!\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          {errors.celular && (\r\n                            <p className={styles.errorMessages}>\r\n                              {errors.celular.message}\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n              <div id=\"section4\" className={styles.secaoFormulario}>\r\n                <h4>Contato de emergência:</h4>\r\n\r\n                <Table\r\n                  className={`table-bordered ${styles.tabela}`}\r\n                  width=\"100%\"\r\n                  cellpadding=\"0\"\r\n                >\r\n                  <thead>\r\n                    <tr>\r\n                      <td width=\"50%\">\r\n                        <Input\r\n                          label=\"Nome completo:\"\r\n                          id=\"nomeEmerg\"\r\n                          name=\"nomeEmerg\"\r\n                          placeholder=\"Jane Doe\"\r\n                          type=\"text\"\r\n                          outline={false}\r\n                          height=\"40px\"\r\n                          onChange={(e) =>\r\n                            setNomeContatoEmergencialDigitado(e.target.value)\r\n                          }\r\n                          ref={register(\"nomeEmerg\", {\r\n                            required: {\r\n                              value: true,\r\n                              message:\r\n                                \"Informe o nome do seu contato de emergência!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.nomeEmerg && (\r\n                          <p className={styles.errorMessages}>\r\n                            {errors.nomeEmerg.message}\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                      <td width=\"50%\">\r\n                        <Input\r\n                          label=\"E-mail:\"\r\n                          id=\"emailEmerg\"\r\n                          name=\"emailEmerg\"\r\n                          placeholder=\"email@email.com\"\r\n                          type=\"Email\"\r\n                          outline={false}\r\n                          height=\"40px\"\r\n                          onChange={(e) =>\r\n                            setEmailEmergencialDigitado(e.target.value)\r\n                          }\r\n                          ref={register(\"emailEmerg\", {\r\n                            required: {\r\n                              value: true,\r\n                              message:\r\n                                \"Informe o Email do seu contato de emergêcia!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.emailEmerg && (\r\n                          <p className={styles.errorMessages}>\r\n                            {errors.emailEmerg.message}\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td width=\"50%\">\r\n                        <Input\r\n                          label=\"Telefone:\"\r\n                          id=\"telefoneEmerg\"\r\n                          name=\"telefoneEmerg\"\r\n                          placeholder=\"(__)____-____\"\r\n                          type=\"text\"\r\n                          outline={false}\r\n                          height=\"40px\"\r\n                          onChange={(e) =>\r\n                            setTelefoneEmergencialDigitado(e.target.value)\r\n                          }\r\n                          ref={register(\"telefoneEmerg\", {\r\n                            required: {\r\n                              value: true,\r\n                              message:\r\n                                \"Informe o telefone do seu contato de emergência\",\r\n\r\n                              minLength: 10,\r\n                              message: \"Insira um telefone válido\",\r\n\r\n                              maxLength: 10,\r\n                              message: \"Insira um telefone válido\",\r\n                              number: true,\r\n                              message: \"Insira apenas números!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.telefoneEmerg && (\r\n                          <p className={styles.errorMessages}>\r\n                            {errors.telefoneEmerg.message}\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                      <td width=\"50%\">\r\n                        <Input\r\n                          label=\"Confirmar e-mail:\"\r\n                          id=\"confemailEmerg\"\r\n                          placeholder=\"email@email.com\"\r\n                          type=\"Email\"\r\n                          outline={false}\r\n                          height=\"40px\"\r\n                          onChange={(e) =>\r\n                            setEmailEmergencialDigitado(e.target.value)\r\n                          }\r\n                          ref={register(\"confemailEmerg\", {\r\n                            required: {\r\n                              value: true,\r\n                              message:\r\n                                \"Confirme o email do seu contato de emergência\",\r\n\r\n                              equalTo: \"#emailEmerg\",\r\n                              message: \"Os Emails devem ser iguais!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.confemailEmerg && (\r\n                          <p className={styles.errorMessages}>\r\n                            {errors.confemailEmerg.message}\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td width=\"50%\">\r\n                        <Input\r\n                          label=\"Celular:\"\r\n                          id=\"celularEmerg\"\r\n                          name=\"celularEmerg\"\r\n                          placeholder=\"(__)_____-____\"\r\n                          type=\"text\"\r\n                          outline={false}\r\n                          height=\"40px\"\r\n                          onChange={(e) =>\r\n                            setCelularEmergencialDigitado(e.target.value)\r\n                          }\r\n                          ref={register(\"celularEmerg\", {\r\n                            required: {\r\n                              value: true,\r\n                              message:\r\n                                \"Informe o celular do seu contato de emergência\",\r\n\r\n                              minLength: 11,\r\n                              message: \"Informe um número de celular valido!\",\r\n\r\n                              maxLength: 11,\r\n                              message: \"Informe um número de celular valido!\",\r\n                              number: true,\r\n                              message: \"Insira apenas números!\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.celularEmerg && (\r\n                          <p className={styles.errorMessages}>\r\n                            {errors.celularEmerg.message}\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </thead>\r\n                </Table>\r\n              </div>\r\n              <div className={`row ${styles.botoes}`}>\r\n                <div className=\"col\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.btnAnterior}\r\n                    onclick=\"anterior()\"\r\n                  >\r\n                    <Link to=\"/confirmarCadastro\">Voltar</Link>\r\n                  </button>\r\n                </div>\r\n                <div className={`col ${styles.btnProximoWrapper}`}>\r\n                  <button type=\"submit\" className={styles.btnProximo}>\r\n                    Confirma\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <FooterSec />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CadastroVitima;\r\n"]},"metadata":{},"sourceType":"module"}